# –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫–ª–∞—Å—Å—ã –¥–ª—è —Å–∞–º—ã—Ö –º–∞–ª–µ–Ω—å–∫–∏—Ö

# –º–∏–Ω—É—Ç–∫–∞ —Ç–µ–æ—Ä–∏–∏
# DEBUG: –ª–æ–≥–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã
# INFO: –ª–æ–≥–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º, —á—Ç–æ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ
# WARNING: –ª–æ–≥–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å —á—Ç–æ-—Ç–æ –Ω–µ–æ–±—ã—á–Ω–æ–µ, –Ω–æ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ
# ERROR: –∏–∑-–∑–∞ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ —Å–º–æ–≥–ª–∞ —Ä–∞–±–æ—Ç–∞—Ç—å
# CRITICAL: –∏–∑-–∑–∞ –∫–∞–∫–æ–π-—Ç–æ *–æ—á–µ–Ω—å* —Å–µ—Ä—å—ë–∑–Ω–æ–π –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å

import logging

logging.basicConfig(level=logging.DEBUG)

a = int(input('–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: '))
b = int(input('–í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: '))
logging.info(f'16:First number is {a}')
logging.info(f'17:Second number is {b}')


class Simplemath:           # –∏ —Ç—É—Ç —É –Ω–∞—Å –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–ª–∞—Å—Å
    def __init__(self):     # –∞ —Ç—É—Ç –º—ã –µ–≥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        self.a = a          # —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –Ω–∏–∂–µ
        self.b = b
        logging.info('24:Successful class init')

    def add(self, a, b):
        plus = a + b
        logging.info(f'28:Add ans:{plus}')
        return plus

    def subs(self, a, b):
        minus = a - b
        logging.info(f'32:Substraction ans:{minus}')
        return minus

    def mult(self, a, b):
        mul = a * b
        logging.info(f'38:Multiplying ans:{mul}')
        return mul

    def div(self, a, b):
        divis = a / b
        logging.info(f'43:Division ans:{divis}')
        return divis


_a = Simplemath()                   # –Ω–∞—Å–∫–æ–ª—å–∫–æ —è –ø–æ–Ω—è–ª, _ –≤–æ–∑–ª–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —ç—Ç–æ –ø—Ä–æ—Å—å–±–∞ –µ—ë –Ω–µ –∏c–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
print(_a.mult(a, b), _a.add(a, b))  # –∞ —Å—é–¥–∞ –º–æ–∂–Ω–æ –≤–ø–∏—Å–∞—Ç—å –ª—é–±—ã–µ –º–µ—Ç–æ–¥—ã. –∫–ª–∞—Å—Å—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã üòÄ
